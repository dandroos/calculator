{"ast":null,"code":"import _classCallCheck from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/david/Desktop/calculator/calculator/src/components/Calculator.js\";\nimport React from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calculator, _React$Component);\n\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n    _this.state = {\n      subtotal: 0,\n      number: 0,\n      operator: \"+\",\n      value: 0,\n      isNewValue: true\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      this.updateState(e.target.getAttribute(\"type\"), e.target.getAttribute(\"value\"));\n      e.target.blur();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.addEventListener('keypress', function (e) {\n        switch (true) {\n          case /[1234567890]/.test(e.key):\n            _this2.updateState('number', e.key);\n\n            break;\n\n          case /[.]/.test(e.key):\n            _this2.updateState('decimal', e.key);\n\n            break;\n\n          case /[+\\-*/]/.test(e.key):\n            _this2.updateState('operator', e.key);\n\n            break;\n\n          case /enter||=/i.test(e.key):\n            _this2.updateState('operator', '=');\n\n            break;\n\n          default:\n            console.log();\n        }\n\n        var element;\n\n        if (e.key != 'Enter') {\n          element = document.querySelector(\"[value='\".concat(e.key, \"']\"));\n        } else {\n          element = document.querySelector(\"[value='=']\");\n        }\n\n        if (element) {\n          element.focus();\n          setTimeout(function () {\n            return element.blur();\n          }, 100);\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(type, value) {\n      var _this3 = this;\n\n      switch (type) {\n        case \"operator\":\n          if (!this.state.isNewValue) {\n            this.setState({\n              number: +this.state.value\n            }, function () {\n              var calc = 0;\n\n              switch (_this3.state.operator) {\n                case \"+\":\n                  calc = _this3.state.subtotal + _this3.state.number;\n                  break;\n\n                case \"-\":\n                  calc = _this3.state.subtotal - _this3.state.number;\n                  break;\n\n                case \"*\":\n                  calc = _this3.state.subtotal * _this3.state.number;\n                  break;\n\n                case \"/\":\n                  calc = _this3.state.subtotal / _this3.state.number;\n                  break;\n\n                case \"=\":\n                  calc = _this3.setState.subtotal;\n\n                default:\n                  calc = 0;\n              }\n\n              if (value == \"=\") {\n                _this3.setState({\n                  subtotal: 0,\n                  value: calc,\n                  operator: \"+\",\n                  isNewValue: true\n                });\n              } else {\n                _this3.setState({\n                  subtotal: calc,\n                  value: calc,\n                  operator: value,\n                  isNewValue: true\n                });\n              }\n            });\n          } else {\n            this.setState({\n              subtotal: this.state.value,\n              operator: value\n            }, function () {\n              return console.log(_this3.state);\n            });\n          }\n\n          break;\n\n        case \"number\":\n          if (this.state.isNewValue) {\n            this.setState({\n              value: value,\n              isNewValue: false\n            });\n          } else {\n            this.setState({\n              value: \"\".concat(this.state.value).concat(value),\n              isNewValue: false\n            });\n          }\n\n          break;\n\n        case \"decimal\":\n          var string = this.state.value.toString();\n\n          if (this.state.isNewValue) {\n            this.setState({\n              value: \"0.\",\n              isNewValue: false\n            });\n          } else {\n            if (!string.match(/\\./)) {\n              this.setState({\n                value: \"\".concat(this.state.value, \".\"),\n                isNewValue: false\n              });\n            }\n          }\n\n          break;\n\n        case \"clear\":\n          this.setState({\n            subtotal: 0,\n            value: 0,\n            operator: \"+\",\n            isNewValue: true\n          });\n          break;\n\n        default:\n          console.log(\"Error!\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calculator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Display, {\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Keypad, {\n        click: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n\nexport { Calculator as default };","map":{"version":3,"sources":["/home/david/Desktop/calculator/calculator/src/components/Calculator.js"],"names":["React","Display","Keypad","Calculator","props","state","subtotal","number","operator","value","isNewValue","handleClick","bind","updateState","e","target","getAttribute","blur","document","addEventListener","test","key","console","log","element","querySelector","focus","setTimeout","type","setState","calc","string","toString","match","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CADC;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAGXC,MAAAA,QAAQ,EAAE,GAHC;AAIXC,MAAAA,KAAK,EAAE,CAJI;AAKXC,MAAAA,UAAU,EAAE;AALD,KAAb;AAOA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AAViB;AAWlB;;;;gCAEWE,C,EAAG;AACb,WAAKD,WAAL,CAAiBC,CAAC,CAACC,MAAF,CAASC,YAAT,CAAsB,MAAtB,CAAjB,EAAgDF,CAAC,CAACC,MAAF,CAASC,YAAT,CAAsB,OAAtB,CAAhD;AACAF,MAAAA,CAAC,CAACC,MAAF,CAASE,IAAT;AACD;;;wCAEmB;AAAA;;AAClBC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,UAACL,CAAD,EAAO;AAC3C,gBAAQ,IAAR;AACE,eAAK,eAAeM,IAAf,CAAoBN,CAAC,CAACO,GAAtB,CAAL;AACE,YAAA,MAAI,CAACR,WAAL,CAAiB,QAAjB,EAA2BC,CAAC,CAACO,GAA7B;;AACA;;AACF,eAAK,MAAMD,IAAN,CAAWN,CAAC,CAACO,GAAb,CAAL;AACE,YAAA,MAAI,CAACR,WAAL,CAAiB,SAAjB,EAA4BC,CAAC,CAACO,GAA9B;;AACA;;AACF,eAAK,UAAUD,IAAV,CAAeN,CAAC,CAACO,GAAjB,CAAL;AACE,YAAA,MAAI,CAACR,WAAL,CAAiB,UAAjB,EAA6BC,CAAC,CAACO,GAA/B;;AACA;;AACF,eAAK,YAAYD,IAAZ,CAAiBN,CAAC,CAACO,GAAnB,CAAL;AACE,YAAA,MAAI,CAACR,WAAL,CAAiB,UAAjB,EAA6B,GAA7B;;AACA;;AACF;AACES,YAAAA,OAAO,CAACC,GAAR;AAdJ;;AAgBA,YAAIC,OAAJ;;AAEA,YAAGV,CAAC,CAACO,GAAF,IAAS,OAAZ,EAAoB;AAClBG,UAAAA,OAAO,GAAGN,QAAQ,CAACO,aAAT,mBAAkCX,CAAC,CAACO,GAApC,QAAV;AACD,SAFD,MAEK;AACHG,UAAAA,OAAO,GAAGN,QAAQ,CAACO,aAAT,eAAV;AACD;;AAED,YAAGD,OAAH,EAAW;AACTA,UAAAA,OAAO,CAACE,KAAR;AACAC,UAAAA,UAAU,CAAC;AAAA,mBAAKH,OAAO,CAACP,IAAR,EAAL;AAAA,WAAD,EAAsB,GAAtB,CAAV;AACD;AACF,OA7BD;AA8BD;;;gCAEWW,I,EAAMnB,K,EAAO;AAAA;;AACvB,cAAQmB,IAAR;AACE,aAAK,UAAL;AACE,cAAI,CAAC,KAAKvB,KAAL,CAAWK,UAAhB,EAA4B;AAC1B,iBAAKmB,QAAL,CAAc;AACZtB,cAAAA,MAAM,EAAE,CAAC,KAAKF,KAAL,CAAWI;AADR,aAAd,EAEG,YAAM;AACP,kBAAIqB,IAAI,GAAG,CAAX;;AACA,sBAAQ,MAAI,CAACzB,KAAL,CAAWG,QAAnB;AACE,qBAAK,GAAL;AACEsB,kBAAAA,IAAI,GAAG,MAAI,CAACzB,KAAL,CAAWC,QAAX,GAAsB,MAAI,CAACD,KAAL,CAAWE,MAAxC;AACA;;AACF,qBAAK,GAAL;AACEuB,kBAAAA,IAAI,GAAG,MAAI,CAACzB,KAAL,CAAWC,QAAX,GAAsB,MAAI,CAACD,KAAL,CAAWE,MAAxC;AACA;;AACF,qBAAK,GAAL;AACEuB,kBAAAA,IAAI,GAAG,MAAI,CAACzB,KAAL,CAAWC,QAAX,GAAsB,MAAI,CAACD,KAAL,CAAWE,MAAxC;AACA;;AACF,qBAAK,GAAL;AACEuB,kBAAAA,IAAI,GAAG,MAAI,CAACzB,KAAL,CAAWC,QAAX,GAAsB,MAAI,CAACD,KAAL,CAAWE,MAAxC;AACA;;AACF,qBAAK,GAAL;AACEuB,kBAAAA,IAAI,GAAG,MAAI,CAACD,QAAL,CAAcvB,QAArB;;AACF;AACEwB,kBAAAA,IAAI,GAAG,CAAP;AAhBJ;;AAkBA,kBAAIrB,KAAK,IAAI,GAAb,EAAkB;AAChB,gBAAA,MAAI,CAACoB,QAAL,CAAc;AACZvB,kBAAAA,QAAQ,EAAE,CADE;AAEZG,kBAAAA,KAAK,EAAEqB,IAFK;AAGZtB,kBAAAA,QAAQ,EAAE,GAHE;AAIZE,kBAAAA,UAAU,EAAE;AAJA,iBAAd;AAMD,eAPD,MAOO;AACL,gBAAA,MAAI,CAACmB,QAAL,CAAc;AACZvB,kBAAAA,QAAQ,EAAEwB,IADE;AAEZrB,kBAAAA,KAAK,EAAEqB,IAFK;AAGZtB,kBAAAA,QAAQ,EAAEC,KAHE;AAIZC,kBAAAA,UAAU,EAAE;AAJA,iBAAd;AAMD;AACF,aArCD;AAsCD,WAvCD,MAuCO;AACL,iBAAKmB,QAAL,CAAc;AACZvB,cAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWI,KADT;AAEZD,cAAAA,QAAQ,EAAEC;AAFE,aAAd,EAGG;AAAA,qBAAMa,OAAO,CAACC,GAAR,CAAY,MAAI,CAAClB,KAAjB,CAAN;AAAA,aAHH;AAID;;AACD;;AAEF,aAAK,QAAL;AACE,cAAI,KAAKA,KAAL,CAAWK,UAAf,EAA2B;AACzB,iBAAKmB,QAAL,CAAc;AACZpB,cAAAA,KAAK,EAAEA,KADK;AAEZC,cAAAA,UAAU,EAAE;AAFA,aAAd;AAID,WALD,MAKO;AACL,iBAAKmB,QAAL,CAAc;AACZpB,cAAAA,KAAK,YAAK,KAAKJ,KAAL,CAAWI,KAAhB,SAAwBA,KAAxB,CADO;AAEZC,cAAAA,UAAU,EAAE;AAFA,aAAd;AAID;;AACD;;AAEF,aAAK,SAAL;AACE,cAAIqB,MAAM,GAAG,KAAK1B,KAAL,CAAWI,KAAX,CAAiBuB,QAAjB,EAAb;;AACA,cAAG,KAAK3B,KAAL,CAAWK,UAAd,EAAyB;AACvB,iBAAKmB,QAAL,CAAc;AACZpB,cAAAA,KAAK,MADO;AAEZC,cAAAA,UAAU,EAAE;AAFA,aAAd;AAID,WALD,MAKK;AACH,gBAAI,CAACqB,MAAM,CAACE,KAAP,CAAa,IAAb,CAAL,EAAyB;AACvB,mBAAKJ,QAAL,CAAc;AACZpB,gBAAAA,KAAK,YAAK,KAAKJ,KAAL,CAAWI,KAAhB,MADO;AAEZC,gBAAAA,UAAU,EAAE;AAFA,eAAd;AAID;AACF;;AACD;;AAEF,aAAK,OAAL;AACE,eAAKmB,QAAL,CAAc;AACZvB,YAAAA,QAAQ,EAAE,CADE;AAEZG,YAAAA,KAAK,EAAE,CAFK;AAGZD,YAAAA,QAAQ,EAAE,GAHE;AAIZE,YAAAA,UAAU,EAAE;AAJA,WAAd;AAMA;;AACF;AACEY,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAzFJ;AA2FD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAI,KAAKlB,KAAL,CAAWI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAI,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAzJqCX,KAAK,CAACkC,S;;SAAzB/B,U","sourcesContent":["import React from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtotal: 0,\n      number: 0,\n      operator: \"+\",\n      value: 0,\n      isNewValue: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  handleClick(e) {\n    this.updateState(e.target.getAttribute(\"type\"), e.target.getAttribute(\"value\"))\n    e.target.blur();\n  }\n\n  componentDidMount() {\n    document.addEventListener('keypress', (e) => {\n      switch (true) {\n        case /[1234567890]/.test(e.key):\n          this.updateState('number', e.key);\n          break;\n        case /[.]/.test(e.key):\n          this.updateState('decimal', e.key);\n          break;\n        case /[+\\-*/]/.test(e.key):\n          this.updateState('operator', e.key);\n          break;\n        case /enter||=/i.test(e.key):\n          this.updateState('operator', '=');\n          break;\n        default:\n          console.log()\n      }\n      let element;\n\n      if(e.key != 'Enter'){\n        element = document.querySelector(`[value='${e.key}']`);\n      }else{\n        element = document.querySelector(`[value='=']`)\n      }\n\n      if(element){\n        element.focus();\n        setTimeout(()=> element.blur(), 100);\n      }\n    })\n  }\n\n  updateState(type, value) {\n    switch (type) {\n      case \"operator\":\n        if (!this.state.isNewValue) {\n          this.setState({\n            number: +this.state.value\n          }, () => {\n            var calc = 0;\n            switch (this.state.operator) {\n              case \"+\":\n                calc = this.state.subtotal + this.state.number;\n                break;\n              case \"-\":\n                calc = this.state.subtotal - this.state.number;\n                break;\n              case \"*\":\n                calc = this.state.subtotal * this.state.number;\n                break;\n              case \"/\":\n                calc = this.state.subtotal / this.state.number;\n                break;\n              case \"=\":\n                calc = this.setState.subtotal;\n              default:\n                calc = 0;\n            }\n            if (value == \"=\") {\n              this.setState({\n                subtotal: 0,\n                value: calc,\n                operator: \"+\",\n                isNewValue: true\n              });\n            } else {\n              this.setState({\n                subtotal: calc,\n                value: calc,\n                operator: value,\n                isNewValue: true\n              });\n            }\n          });\n        } else {\n          this.setState({\n            subtotal: this.state.value,\n            operator: value\n          }, () => console.log(this.state));\n        }\n        break;\n\n      case \"number\":\n        if (this.state.isNewValue) {\n          this.setState({\n            value: value,\n            isNewValue: false\n          });\n        } else {\n          this.setState({\n            value: `${this.state.value}${value}`,\n            isNewValue: false\n          });\n        }\n        break;\n\n      case \"decimal\":\n        let string = this.state.value.toString();\n        if(this.state.isNewValue){\n          this.setState({\n            value: `0.`,\n            isNewValue: false\n          })\n        }else{\n          if (!string.match(/\\./)) {\n            this.setState({\n              value: `${this.state.value}.`,\n              isNewValue: false\n            });\n          }\n        }\n        break;\n\n      case \"clear\":\n        this.setState({\n          subtotal: 0,\n          value: 0,\n          operator: \"+\",\n          isNewValue: true\n        });\n        break;\n      default:\n        console.log(\"Error!\");\n    }\n  }\n\n  render() {\n    return ( \n      <div className = \"calculator\" >\n        <Display value = {this.state.value}/> \n        <Keypad click = {this.handleClick}/> \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}