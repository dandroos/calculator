{"ast":null,"code":"import _classCallCheck from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/david/Desktop/calculator/calculator/src/components/Calculator.js\";\nimport React from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calculator, _React$Component);\n\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n    _this.state = {\n      subtotal: 0,\n      number: 0,\n      operator: \"+\",\n      value: 0,\n      isNewValue: true\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      this.updateState(e.target.getAttribute(\"type\"), e.target.getAttribute(\"value\"));\n      e.target.blur();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.addEventListener('keypress', function (e) {\n        switch (e.key) {\n          case '0':\n            _this2.updateState('number', '');\n\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(type, value) {\n      var _this3 = this;\n\n      switch (type) {\n        case \"operator\":\n          if (!this.state.isNewValue) {\n            this.setState({\n              number: +this.state.value\n            }, function () {\n              var calc = 0;\n\n              switch (_this3.state.operator) {\n                case \"+\":\n                  calc = _this3.state.subtotal + _this3.state.number;\n                  break;\n\n                case \"-\":\n                  calc = _this3.state.subtotal - _this3.state.number;\n                  break;\n\n                case \"*\":\n                  calc = _this3.state.subtotal * _this3.state.number;\n                  break;\n\n                case \"/\":\n                  calc = _this3.state.subtotal / _this3.state.number;\n                  break;\n\n                case \"=\":\n                  calc = _this3.setState.subtotal;\n\n                default:\n                  calc = 0;\n              }\n\n              if (value == \"=\") {\n                _this3.setState({\n                  subtotal: 0,\n                  value: calc,\n                  operator: \"+\",\n                  isNewValue: true\n                });\n              } else {\n                _this3.setState({\n                  subtotal: calc,\n                  value: calc,\n                  operator: value,\n                  isNewValue: true\n                });\n              }\n            });\n          } else {\n            this.setState({\n              subtotal: this.state.value,\n              operator: value\n            }, function () {\n              return console.log(_this3.state);\n            });\n          }\n\n          break;\n\n        case \"number\":\n          if (this.state.isNewValue) {\n            this.setState({\n              value: value,\n              isNewValue: false\n            });\n          } else {\n            this.setState({\n              value: \"\".concat(this.state.value).concat(value),\n              isNewValue: false\n            });\n          }\n\n          break;\n\n        case \"decimal\":\n          var string = this.state.value.toString();\n\n          if (!string.match(/\\./)) {\n            this.setState({\n              value: \"\".concat(this.state.value, \".\")\n            });\n          }\n\n          break;\n\n        case \"clear\":\n          this.setState({\n            subtotal: 0,\n            value: 0,\n            operator: \"+\",\n            isNewValue: true\n          });\n          break;\n\n        default:\n          console.log(\"Error!\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calculator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Display, {\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Keypad, {\n        click: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n\nexport { Calculator as default };","map":{"version":3,"sources":["/home/david/Desktop/calculator/calculator/src/components/Calculator.js"],"names":["React","Display","Keypad","Calculator","props","state","subtotal","number","operator","value","isNewValue","handleClick","bind","updateState","e","target","getAttribute","blur","document","addEventListener","key","type","setState","calc","console","log","string","toString","match","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtotal: 0,\n      number: 0,\n      operator: \"+\",\n      value: 0,\n      isNewValue: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  handleClick(e) {\n    this.updateState(e.target.getAttribute(\"type\"), e.target.getAttribute(\"value\"))\n    \n    e.target.blur();\n  }\n\n  componentDidMount(){\n    document.addEventListener('keypress', (e)=>{\n      switch(e.key){\n        case '0':\n          this.updateState('number', '')\n      }\n    })\n  }\n\n  updateState(type, value){\n    switch (type) {\n      case \"operator\":\n        if(!this.state.isNewValue){\n        this.setState({ number: +this.state.value }, () => {\n          var calc = 0;\n          switch (this.state.operator) {\n            case \"+\":\n              calc = this.state.subtotal + this.state.number;\n              break;\n            case \"-\":\n              calc = this.state.subtotal - this.state.number;\n              break;\n            case \"*\":\n              calc = this.state.subtotal * this.state.number;\n              break;\n            case \"/\":\n              calc = this.state.subtotal / this.state.number;\n              break;\n            case \"=\":\n              calc = this.setState.subtotal;\n            default:\n              calc = 0;\n          }\n          if (value == \"=\") {\n            this.setState({\n              subtotal: 0,\n              value: calc,\n              operator: \"+\",\n              isNewValue: true\n            });\n          } else {\n            this.setState({\n              subtotal: calc,\n              value: calc,\n              operator: value,\n              isNewValue: true\n            });\n          }\n        });\n      }else{\n        this.setState({subtotal: this.state.value, operator: value}, ()=> console.log(this.state));\n      }\n      break;\n\n      case \"number\":\n        if (this.state.isNewValue) {\n          this.setState({ value: value, isNewValue: false });\n        } else {\n          this.setState({\n            value: `${this.state.value}${value}`,\n            isNewValue: false\n          });\n        }\n        break;\n\n      case \"decimal\":\n        let string = this.state.value.toString();\n        if (!string.match(/\\./)) {\n          this.setState({ value: `${this.state.value}.` });\n        }\n        break;\n\n      case \"clear\":\n        this.setState({\n          subtotal: 0,\n          value: 0,\n          operator: \"+\",\n          isNewValue: true\n        });\n        break;\n      default:\n        console.log(\"Error!\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"calculator\">\n        <Display value={this.state.value} />\n        <Keypad click={this.handleClick} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}