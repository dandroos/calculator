{"ast":null,"code":"import _classCallCheck from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/david/Desktop/calculator/calculator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/david/Desktop/calculator/calculator/src/components/Calculator.js\";\nimport React from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calculator, _React$Component);\n\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n    _this.state = {\n      subtotal: 0,\n      number: 0,\n      operator: \"+\",\n      value: 0,\n      isNewValue: true\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateState = _this.u.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      updateState(e.target.getAttribute(\"type\"), e.target.getAttribute(\"value\"));\n      e.target.blur();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keypress', function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(type) {\n      var _this2 = this;\n\n      var operator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      switch (type) {\n        case \"operator\":\n          if (!this.state.isNewValue) {\n            this.setState({\n              number: +this.state.value\n            }, function () {\n              var calc = 0;\n\n              switch (_this2.state.operator) {\n                case \"+\":\n                  calc = _this2.state.subtotal + _this2.state.number;\n                  break;\n\n                case \"-\":\n                  calc = _this2.state.subtotal - _this2.state.number;\n                  break;\n\n                case \"*\":\n                  calc = _this2.state.subtotal * _this2.state.number;\n                  break;\n\n                case \"/\":\n                  calc = _this2.state.subtotal / _this2.state.number;\n                  break;\n\n                case \"=\":\n                  calc = _this2.setState.subtotal;\n\n                default:\n                  calc = 0;\n              }\n\n              if (operator == \"=\") {\n                _this2.setState({\n                  subtotal: 0,\n                  value: calc,\n                  operator: \"+\",\n                  isNewValue: true\n                });\n              } else {\n                _this2.setState({\n                  subtotal: calc,\n                  value: calc,\n                  operator: operator,\n                  isNewValue: true\n                });\n              }\n            });\n          } else {\n            this.setState({\n              subtotal: this.state.value,\n              operator: operator\n            }, function () {\n              return console.log(_this2.state);\n            });\n          }\n\n          break;\n\n        case \"number\":\n          var value = e.target.getAttribute(\"value\");\n\n          if (this.state.isNewValue) {\n            this.setState({\n              value: value,\n              isNewValue: false\n            });\n          } else {\n            this.setState({\n              value: \"\".concat(this.state.value).concat(value),\n              isNewValue: false\n            });\n          }\n\n          break;\n\n        case \"decimal\":\n          var string = this.state.value.toString();\n\n          if (!string.match(/\\./)) {\n            this.setState({\n              value: \"\".concat(this.state.value, \".\")\n            });\n          }\n\n          break;\n\n        case \"clear\":\n          this.setState({\n            subtotal: 0,\n            value: 0,\n            operator: \"+\",\n            isNewValue: true\n          });\n          break;\n\n        default:\n          console.log(\"Error!\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calculator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Display, {\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Keypad, {\n        click: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n\nexport { Calculator as default };","map":{"version":3,"sources":["/home/david/Desktop/calculator/calculator/src/components/Calculator.js"],"names":["React","Display","Keypad","Calculator","props","state","subtotal","number","operator","value","isNewValue","handleClick","bind","updateState","u","e","target","getAttribute","blur","document","addEventListener","console","log","type","setState","calc","string","toString","match","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtotal: 0,\n      number: 0,\n      operator: \"+\",\n      value: 0,\n      isNewValue: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.updateState = this.u.bind(this);\n  }\n\n  handleClick(e) {\n    updateState(e.target.getAttribute(\"type\"), e.target.getAttribute(\"value\"))\n    \n    e.target.blur();\n  }\n\n  componentDidMount(){\n    document.addEventListener('keypress', (e)=>{\n      console.log(e);\n    })\n  }\n\n  updateState(type, operator=null){\n    switch (type) {\n      case \"operator\":\n        if(!this.state.isNewValue){\n        this.setState({ number: +this.state.value }, () => {\n          var calc = 0;\n          switch (this.state.operator) {\n            case \"+\":\n              calc = this.state.subtotal + this.state.number;\n              break;\n            case \"-\":\n              calc = this.state.subtotal - this.state.number;\n              break;\n            case \"*\":\n              calc = this.state.subtotal * this.state.number;\n              break;\n            case \"/\":\n              calc = this.state.subtotal / this.state.number;\n              break;\n            case \"=\":\n              calc = this.setState.subtotal;\n            default:\n              calc = 0;\n          }\n          if (operator == \"=\") {\n            this.setState({\n              subtotal: 0,\n              value: calc,\n              operator: \"+\",\n              isNewValue: true\n            });\n          } else {\n            this.setState({\n              subtotal: calc,\n              value: calc,\n              operator: operator,\n              isNewValue: true\n            });\n          }\n        });\n      }else{\n        this.setState({subtotal: this.state.value, operator: operator}, ()=> console.log(this.state));\n      }\n      break;\n\n      case \"number\":\n        let value = e.target.getAttribute(\"value\");\n        if (this.state.isNewValue) {\n          this.setState({ value: value, isNewValue: false });\n        } else {\n          this.setState({\n            value: `${this.state.value}${value}`,\n            isNewValue: false\n          });\n        }\n        break;\n\n      case \"decimal\":\n        let string = this.state.value.toString();\n        if (!string.match(/\\./)) {\n          this.setState({ value: `${this.state.value}.` });\n        }\n        break;\n\n      case \"clear\":\n        this.setState({\n          subtotal: 0,\n          value: 0,\n          operator: \"+\",\n          isNewValue: true\n        });\n        break;\n      default:\n        console.log(\"Error!\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"calculator\">\n        <Display value={this.state.value} />\n        <Keypad click={this.handleClick} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}